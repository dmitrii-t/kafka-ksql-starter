version: '3.5'
services:
  # Runs the Kafka KSQL data generator for transaction
  dataload:
    image: confluentinc/ksql-examples:5.0.1
    hostname: dataload
    container_name: dataload
    # Note: The container's `run` script will perform the same readiness checks
    # for Kafka and Confluent Schema Registry, but that's ok because they complete fast.
    # The reason we check for readiness here is that we can insert a sleep time
    # for topic creation before we start the application.
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker:9092 1 300 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 300 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 2 && \
		               /usr/bin/ksql-datagen schema=~/dataload/transaction.avro format=json key=terminal_business_day topic=transaction_input maxInterval=500 bootstrap-server=broker:9092 schemaRegistryUrl=http://schema-registry:8081'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      STREAMS_BOOTSTRAP_SERVERS: broker:9092
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081      
    volumes:
     - $PWD/dataload:/root/dataload

networks:
  default:
    name: kappa_network
